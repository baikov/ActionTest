name: Publish on Docker

on:
  push:
    branches:
      - master

jobs:
  test_status:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@master

      - name: Build the Stack
        run:  docker-compose -f production.yml build

      - name: Run the Stack
        run:  docker-compose -f production.yml up -d
      
      - name: Check http status code of production site
        uses: lakuapik/gh-actions-http-status@v1
        with:
          sites: '["http://127.0.0.1",]'
          expected: '[200]'

      - name: Tear down the Stack
        run:  docker-compose -f production.yml down

  build_and_pub:
    # Если тесты были пройдены успешно
    needs: test_status
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      #- uses: actions/checkout@master

      - name: Login to DockerHub Registry
        run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_LOGIN }} --password-stdin
      
      - name: Build the Docker image
        run: docker-compose -f production.yml build

      - name: Push the Docker image to the registry
        run: docker-compose -f production.yml push

      # - name: Login to GitHub Container Registry
      #   uses: docker/login-action@v1
      #   with:
      #     registry: ghcr.io
      #     username: ${{ github.repository_owner }}
      #     password: ${{ secrets.CR_PAT }}
        

      # - uses: actions/checkout@v2
      # - name: Login to GitHub Package Registry
      #   run: echo ${{ secrets.GITHUB_TOKEN }} | docker login docker.pkg.github.com -u ${{ github.repository }} --password-stdin
      # - name: Build the Docker image
      #   run: docker build -t myimage:latest .
      # - name: Tag the Docker image
      #   run: docker tag myimage:latest docker.pkg.github.com/username/repository/myimage:1.0
      # - name: Push the Docker image to the registry
      #   run: docker push docker.pkg.github.com/username/repository/myimage:1.0
